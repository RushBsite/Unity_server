// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ChatTest
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum fbsId : byte
{
  NONE = 0,
  C_Chat = 1,
  S_Chat = 2,
  S_EnterGame = 3,
};

public struct C_Chat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static C_Chat GetRootAsC_Chat(ByteBuffer _bb) { return GetRootAsC_Chat(_bb, new C_Chat()); }
  public static C_Chat GetRootAsC_Chat(ByteBuffer _bb, C_Chat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_Chat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Context { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetContextBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetContextBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetContextArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ChatTest.C_Chat> CreateC_Chat(FlatBufferBuilder builder,
      StringOffset contextOffset = default(StringOffset)) {
    builder.StartTable(1);
    C_Chat.AddContext(builder, contextOffset);
    return C_Chat.EndC_Chat(builder);
  }

  public static void StartC_Chat(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddContext(FlatBufferBuilder builder, StringOffset contextOffset) { builder.AddOffset(0, contextOffset.Value, 0); }
  public static Offset<ChatTest.C_Chat> EndC_Chat(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ChatTest.C_Chat>(o);
  }
};

public struct S_Chat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static S_Chat GetRootAsS_Chat(ByteBuffer _bb) { return GetRootAsS_Chat(_bb, new S_Chat()); }
  public static S_Chat GetRootAsS_Chat(ByteBuffer _bb, S_Chat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_Chat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Context { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetContextBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetContextBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetContextArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ChatTest.S_Chat> CreateS_Chat(FlatBufferBuilder builder,
      StringOffset contextOffset = default(StringOffset)) {
    builder.StartTable(1);
    S_Chat.AddContext(builder, contextOffset);
    return S_Chat.EndS_Chat(builder);
  }

  public static void StartS_Chat(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddContext(FlatBufferBuilder builder, StringOffset contextOffset) { builder.AddOffset(0, contextOffset.Value, 0); }
  public static Offset<ChatTest.S_Chat> EndS_Chat(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ChatTest.S_Chat>(o);
  }
};

public struct S_EnterGame : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static S_EnterGame GetRootAsS_EnterGame(ByteBuffer _bb) { return GetRootAsS_EnterGame(_bb, new S_EnterGame()); }
  public static S_EnterGame GetRootAsS_EnterGame(ByteBuffer _bb, S_EnterGame obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_EnterGame __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Context { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetContextBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetContextBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetContextArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<ChatTest.S_EnterGame> CreateS_EnterGame(FlatBufferBuilder builder,
      StringOffset contextOffset = default(StringOffset)) {
    builder.StartTable(1);
    S_EnterGame.AddContext(builder, contextOffset);
    return S_EnterGame.EndS_EnterGame(builder);
  }

  public static void StartS_EnterGame(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddContext(FlatBufferBuilder builder, StringOffset contextOffset) { builder.AddOffset(0, contextOffset.Value, 0); }
  public static Offset<ChatTest.S_EnterGame> EndS_EnterGame(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ChatTest.S_EnterGame>(o);
  }
};


}
